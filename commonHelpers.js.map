{"version":3,"file":"commonHelpers.js","sources":["../src/index.js"],"sourcesContent":["\nimport axios from 'axios';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst elements = {\n  form: document.querySelector('#search-form'),\n  input: document.querySelector('input'),\n  formContainer: document.querySelector('.gallery'),\n  upButton: document.querySelector('.round-button'),\n  guardJs: document.querySelector('.for_upButton'),\n  loader: document.getElementById('loader'),\n};\n\nlet query = '';\nlet page = 1;\nconst perPage = 40;\nlet isLoading = false;\nconst BASE_URL = 'https://pixabay.com/api/';\nconst simpleLightBox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nasync function fetchImages(inputValue, page) {\n  const params = new URLSearchParams({\n    key: '38393469-c3ed0194fa41e0d5130fcf9c2',\n    q: inputValue,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    per_page: perPage,\n    page,\n  });\n\n  try {\n    const response = await axios.get(`${BASE_URL}?${params}`);\n    if (response.status !== 200) {\n      throw new Error(`Error: ${response.status} ${response.statusText}`);\n    }\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    throw error;\n  }\n}\n\nelements.form.addEventListener('submit', onFormSubmit);\nelements.upButton.addEventListener('click', scrollTop);\n\nconst options = {\n  root: null,\n  rootMargin: '300px',\n  threshold: 0,\n};\n\nconst observer = new IntersectionObserver(handlerPagination, options);\n\nasync function onFormSubmit(e) {\n  e.preventDefault();\n  elements.loader.style.display = 'block';\n  const inputValue = elements.input.value.trim();\n\n  if (!inputValue) {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please, fill the main field',\n      position: 'topRight',\n      color: 'red',\n    });\n    elements.loader.style.display = 'none';\n    return;\n  }\n\n  if (inputValue === query) {\n    iziToast.info({\n      title: 'Invalid input',\n      message: `The previous ${query} request has already been received, please enter a new search parameter`,\n      position: 'topRight',\n    });\n    elements.loader.style.display = 'none';\n    return;\n  }\n\n  query = inputValue;\n  page = 1;\n  elements.formContainer.innerHTML = '';\n  elements.upButton.style.visibility = 'hidden';\n  observer.unobserve(elements.guardJs); \n  await loadImages();\n}\n\nasync function loadImages() {\n  try {\n    const { hits, totalHits } = await fetchImages(query, page);\n\n    if (!hits || hits.length === 0) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Sorry, there are no images matching your search query. Please try again.',\n        position: 'topRight',\n        color: 'red',\n      });\n      elements.loader.style.display = 'none';\n      return;\n    }\n\n    elements.formContainer.insertAdjacentHTML('beforeend', createMarkup(hits));\n    simpleLightBox.refresh();\n    iziToast.success({\n      title: 'Success',\n      message: `Hooray! We found ${totalHits} images 😍😍😍`,\n      position: 'topRight',\n      color: 'green',\n    });\n\n    const totalPages = Math.ceil(totalHits / perPage);\n\n    if (page >= totalPages) {\n      iziToast.info({\n        title: 'Info',\n        message: \"We're sorry, but you've reached the end of search results.\",\n        position: 'topRight',\n        color: 'blue',\n      });\n      elements.upButton.style.visibility = 'visible';\n      observer.unobserve(elements.guardJs);\n    } else {\n      observer.observe(elements.guardJs); \n    }\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Something went wrong. Please try again later.',\n      position: 'bottomCenter',\n    });\n  } finally {\n    elements.loader.style.display = 'none';\n    isLoading = false;\n  }\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `\n       <li class=\"photo-card\">\n        <a href=\"${largeImageURL}\">\n          <img class=\"photo-img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n        </a>\n        <div class=\"info\">\n          <p class=\"info-item\"><b>Likes</b>${likes}</p>\n          <p class=\"info-item\"><b>Views</b>${views}</p>\n          <p class=\"info-item\"><b>Comments</b>${comments}</p>\n          <p class=\"info-item\"><b>Downloads</b>${downloads}</p>\n        </div>\n      </li>`\n    )\n    .join('');\n}\n\nfunction scrollTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n  elements.upButton.style.visibility = 'hidden';\n}\n\nasync function handlerPagination(entries) {\n  for (let entry of entries) {\n    if (entry.isIntersecting && !isLoading) {\n      isLoading = true;\n      page += 1;\n      await loadImages();\n    }\n  }\n}\n\n\n\n\n\n// import axios from 'axios';\n// import SimpleLightbox from 'simplelightbox';\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// const elements = {\n//   form: document.querySelector('#search-form'),\n//   input: document.querySelector('input'),\n//   formContainer: document.querySelector('.gallery'),\n//   upButton: document.querySelector('.round-button'),\n//   guardJs: document.querySelector('.for_upButton'),\n//   loader: document.getElementById('loader'),\n// };\n\n// let query = '';\n// let page = 1;\n// let simpleLightBox;\n// const perPage = 40;\n// let isLoading = false;\n// const BASE_URL = 'https://pixabay.com/api/';\n\n// async function fetchImages(inputValue, page) {\n//   const params = new URLSearchParams({\n//     key: '38393469-c3ed0194fa41e0d5130fcf9c2',\n//     q: inputValue,\n//     image_type: 'photo',\n//     orientation: 'horizontal',\n//     safesearch: true,\n//     per_page: perPage,\n//     page: `${page}`,\n//   });\n\n//   try {\n//     const response = await axios.get(`${BASE_URL}?${params}`);\n//     if (response.status !== 200) {\n//       throw new Error(`Error: ${response.status} ${response.statusText}`);\n//     }\n//     const data = response.data;\n//     if (!data.hits || data.hits.length === 0) {\n//       throw new Error('No images found');\n//     }\n//     return data;\n//   } catch (error) {\n//     console.error('Error fetching images:', error);\n//     throw error;\n//   }\n// }\n\n// elements.form.addEventListener('submit', onFormSubmit);\n// simpleLightBox = new SimpleLightbox('.gallery a');\n\n// const options = {\n//   root: null,\n//   rootMargin: '300px',\n//   threshold: 0,\n// };\n\n// const observer = new IntersectionObserver(handlerPagination, options);\n\n// elements.upButton.addEventListener('click', scrollTop);\n\n// async function onFormSubmit(e) {\n//   e.preventDefault();\n//   elements.loader.style.display = 'block';\n//   const inputValue = elements.input.value.trim();\n//   if (inputValue === query) {\n//     iziToast.info({\n//       title: 'Invalid input',\n//       message: `The previous ${query} request has already been received, please enter a new search parameter`,\n//       position: 'topRight',\n//     });\n//     elements.loader.style.display = 'none';\n//     return;\n//   }\n//   elements.formContainer.innerHTML = '';\n\n//   if (!inputValue) {\n//     iziToast.warning({\n//       title: 'Warning',\n//       message: 'Please, fill the main field',\n//       position: 'topRight',\n//       color: 'red',\n//     });\n//     elements.loader.style.display = 'none';\n//     return;\n//   }\n\n//   query = inputValue;\n//   page = 1;\n//   elements.formContainer.innerHTML = '';\n//   try {\n//     observer.observe(elements.guardJs);\n//     const { hits, totalHits } = await fetchImages(inputValue, page);\n//     if (totalHits === 0) {\n//       iziToast.error({\n//         title: 'Error',\n//         message:\n//           'Sorry, there are no images matching your search query. Please try again.',\n//         position: 'topRight',\n//         color: 'red',\n//       });\n//       elements.loader.style.display = 'none';\n//       return;\n//     }\n\n//     elements.formContainer.innerHTML = createMarkup(hits);\n//     simpleLightBox.refresh();\n//     elements.input.value = '';\n//     handlerPagination([{ isIntersecting: true }], observer);\n//     iziToast.success({\n//       title: 'Success',\n//       message: `Hooray! We found ${totalHits} images 😍😍😍`,\n//       position: 'topRight',\n//       color: 'green',\n//     });\n//   } catch (error) {\n//     console.log(error);\n//     // iziToast.error({\n//     //   title: 'Error',\n//     //   message: 'Something went wrong. Please try again later.',\n//     //   position: 'bottomCenter',\n//     // });\n//   } finally {\n//     elements.loader.style.display = 'none';\n//   }\n// }\n\n// function createMarkup(arr) {\n//   return arr\n//     .map(\n//       ({\n//         webformatURL,\n//         largeImageURL,\n//         tags,\n//         likes,\n//         views,\n//         comments,\n//         downloads,\n//       }) => `\n//        <li class=\"photo-card\">\n//         <a href=\"${largeImageURL}\">\n//           <img class=\"photo-img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n//         </a>\n//         <div class=\"info\">\n//           <p class=\"info-item\"><b>Likes</b>${likes}</p>\n//           <p class=\"info-item\"><b>Views</b>${views}</p>\n//           <p class=\"info-item\"><b>Comments</b>${comments}</p>\n//           <p class=\"info-item\"><b>Downloads</b>${downloads}</p>\n//         </div>\n//       </li>`\n//     )\n//     .join('');\n// }\n\n// function scrollTop() {\n//   window.scrollTo({\n//     top: 0,\n//     behavior: 'smooth',\n//   });\n//   elements.upButton.style.visibility = 'hidden';\n// }\n\n// async function handlerPagination(entries, observer) {\n//   if (!isLoading) {\n//     for (let entry of entries) {\n//       if (entry.isIntersecting) {\n//         isLoading = true;\n//         try {\n//           page += 1;\n//           const { hits, totalHits } = await fetchImages(query, page);\n//           elements.formContainer.insertAdjacentHTML(\n//             'beforeend',\n//             createMarkup(hits)\n//           );\n//           simpleLightBox.refresh();\n//           const totalPages = Math.ceil(totalHits / perPage);\n\n//           if (page >= totalPages) {\n//             iziToast.info({\n//               title: 'Info',\n//               message:\n//                 \"We're sorry, but you've reached the end of search results.\",\n//               position: 'topRight',\n//               color: 'blue',\n//             });\n//             elements.upButton.style.visibility = 'visible';\n//             observer.unobserve(elements.guardJs);\n//           }\n//         } catch (error) {\n//           console.log(error);\n//           // elements.upButton.style.visibility = 'visible';\n//           // iziToast.error({\n//           //   title: 'Error',\n//           //   message:\n//           //     \"We're sorry, but you've reached the end of search results\",\n//           //   position: 'topRight',\n//           // });\n//         } finally {\n//           elements.loader.style.display = 'none';\n//           isLoading = false;\n//         }\n//       }\n//     }\n//   }\n// }"],"names":["elements","query","page","perPage","isLoading","BASE_URL","simpleLightBox","SimpleLightbox","fetchImages","inputValue","params","response","axios","error","onFormSubmit","scrollTop","options","observer","handlerPagination","e","iziToast","loadImages","hits","totalHits","createMarkup","totalPages","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","entries","entry"],"mappings":"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"}